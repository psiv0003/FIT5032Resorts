@model EFolio_Take10.Models.Booking

@{
    ViewBag.Title = "Status";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<link href="~/Content/Style.css" rel="stylesheet" />

<h2 class="heading">Update Booking Status</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal cent-align">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group no-display">
        @Html.LabelFor(model => model.BookingDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BookingDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BookingDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.RoomID, "RoomID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("RoomID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RoomID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.GuestID, "GuestID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("GuestID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GuestID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.CheckInDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CheckInDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CheckInDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.CheckOutDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CheckOutDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CheckOutDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.NoOfAdults, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NoOfAdults, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NoOfAdults, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.NoOfChildren, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NoOfChildren, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NoOfChildren, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.TotalCharge, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalCharge, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalCharge, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group no-display">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="text-align: center;">
        Booking Status
        <div class="col-md-10 cent">
            Approve 
            @Html.RadioButtonFor(model => model.status, "1")
            Deny 
            @Html.RadioButtonFor(model => model.status, "0")
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10 cent">
            <input type="submit" value="Save" class="btn custom-btn cent btn-spacing margin-10" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
